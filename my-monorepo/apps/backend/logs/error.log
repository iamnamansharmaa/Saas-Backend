{"level":"error","message":"Error creating order: PrismaClientValidationError: \nInvalid `prisma.order.create()` invocation in\n/Users/namansharma/Desktop/Interview Projects/Saas-Backend-2/my-monorepo/apps/backend/src/services/orderService/orderService.ts:6:29\n\n  3 const prisma = new PrismaClient();\n  4 \n  5 export const createOrder = async (userId: string, productId: string, tenantId: string) => {\n→ 6   return await prisma.order.create({\n        data: {\n          userId: undefined,\n          productId: \"4069451c-b538-4cb4-9fc5-62d65ce190c9\",\n          status: \"pending\",\n          tenantId: \"AMAZON-1\",\n      +   user: {\n      +     create: UserCreateWithoutOrdersInput | UserUncheckedCreateWithoutOrdersInput,\n      +     connectOrCreate: UserCreateOrConnectWithoutOrdersInput,\n      +     connect: UserWhereUniqueInput\n      +   }\n        }\n      })\n\nArgument `user` is missing."}
{"level":"error","message":"Error creating order: PrismaClientValidationError: \nInvalid `prisma.order.create()` invocation in\n/Users/namansharma/Desktop/Interview Projects/Saas-Backend-2/my-monorepo/apps/backend/src/services/orderService/orderService.ts:6:29\n\n  3 const prisma = new PrismaClient();\n  4 \n  5 export const createOrder = async (userId: string, productId: string, tenantId: string) => {\n→ 6   return await prisma.order.create({\n        data: {\n          userId: undefined,\n          productId: \"4069451c-b538-4cb4-9fc5-62d65ce190c9\",\n          status: \"pending\",\n          tenantId: \"AMAZON-1\",\n      +   user: {\n      +     create: UserCreateWithoutOrdersInput | UserUncheckedCreateWithoutOrdersInput,\n      +     connectOrCreate: UserCreateOrConnectWithoutOrdersInput,\n      +     connect: UserWhereUniqueInput\n      +   }\n        }\n      })\n\nArgument `user` is missing."}
{"level":"error","message":"Error creating order: PrismaClientValidationError: \nInvalid `prisma.order.create()` invocation in\n/Users/namansharma/Desktop/Interview Projects/Saas-Backend-2/my-monorepo/apps/backend/src/services/orderService/orderService.ts:6:29\n\n  3 const prisma = new PrismaClient();\n  4 \n  5 export const createOrder = async (userId: string, productId: string, tenantId: string) => {\n→ 6   return await prisma.order.create({\n        data: {\n          userId: undefined,\n          productId: \"4069451c-b538-4cb4-9fc5-62d65ce190c9\",\n          status: \"pending\",\n          tenantId: \"AMAZON-1\",\n      +   user: {\n      +     create: UserCreateWithoutOrdersInput | UserUncheckedCreateWithoutOrdersInput,\n      +     connectOrCreate: UserCreateOrConnectWithoutOrdersInput,\n      +     connect: UserWhereUniqueInput\n      +   }\n        }\n      })\n\nArgument `user` is missing."}
